# Generated by Django 4.1 on 2022-09-24 17:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('enrolment', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField()),
                ('current_year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField()),
                ('remarks', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_timing', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('C', 'Called'), ('N', 'Not Called'), ('W', 'Waiting'), ('D', 'Done')], max_length=1)),
                ('call_notes', models.CharField(max_length=100)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.IntegerField()),
                ('timing', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('details', models.TextField()),
                ('marks', models.IntegerField()),
                ('remarks', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_year', models.IntegerField()),
                ('role', models.CharField(choices=[('1yDev', '1stYear Developers'), ('2yDev', '2ndYear Developer'), ('Des', 'Designer')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q_id', models.CharField(max_length=10)),
                ('q_text', models.TextField()),
                ('total_marks', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='IMGMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=50)),
                ('branch', models.CharField(max_length=50)),
                ('enrolment', models.IntegerField()),
                ('current_year', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TestSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=100)),
                ('percent_weightage', models.DecimalField(decimal_places=5, max_digits=10)),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.paper')),
            ],
        ),
        migrations.CreateModel(
            name='TestResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.candidate')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.testquestion')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.evaluation')),
            ],
        ),
        migrations.AddField(
            model_name='testquestion',
            name='assigned_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testquestion',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.testsection'),
        ),
        migrations.AddField(
            model_name='paper',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.season'),
        ),
        migrations.CreateModel(
            name='InterviewRounds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_no', models.IntegerField()),
                ('interview_type', models.CharField(choices=[('T', 'Tech'), ('H', 'HR')], max_length=1)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.season')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=200)),
                ('interview', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.interview')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('interview_type', models.CharField(max_length=15)),
                ('active', models.CharField(choices=[('F', 'Free'), ('B', 'Busy'), ('I', 'Inactive')], max_length=1)),
                ('interview', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.interview')),
                ('interviewer', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='interview',
            name='interview_round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.interviewrounds'),
        ),
        migrations.CreateModel(
            name='IMGMemberSeasonData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_in_season', models.IntegerField()),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.season')),
            ],
        ),
        migrations.CreateModel(
            name='CandidateSeasonData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.BooleanField()),
                ('status', models.CharField(max_length=100)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.candidate')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.project')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Rec_Season.season')),
            ],
        ),
    ]
